const { User, Thought } = require('../models');


module.exports = {
    // get all users

    getUser(req, res) {
        User.find()
        .then((users) => res.json(users))
        .catch((err) => res.status(500).json(err));
    },
    // Get single user
    getSingleUser(req,res) {
        User.findOne({_id: req.params.userId})
        .select('-__v')
        .then((user) =>
        !user
        ? res.status(404).json({message: 'No user with that Id'})
        : res.json(user)
        )
        .catch((err) => res.status(500).json(err));
    },
    // Create user
    createUser(req,res) {
        User.create(req.body)
        .then((user) => res.json(user))
        .catch((err) => {
            return res.status(500).json(err);
        });
        
        
    },
      // Delete a user
  deleteUser(req, res) {
    User.findOneAndDelete({ _id: req.params.userId })
      .then((user) =>
        !user
          ? res.status(404).json({ message: 'No user with that ID' })
          : User.deleteMany({ _id: { $in: user.thoughts } })
        //   ASK ABOUT THIS
      )
      .then(() => res.json({ message: 'User deleted!' }))
      .catch((err) => res.status(500).json(err));
  },
    // Update a course
    updateUser(req, res) {
        User.findOneAndUpdate(
          { _id: req.params.userId },
          { $set: req.body },
          { runValidators: true, new: true }
        )
          .then((user) =>
            !user
              ? res.status(404).json({ message: 'No user with this id!' })
              : res.json(user)
          )
          .catch((err) => res.status(500).json(err));
      },
      addFriend(req, res) {
        User.findOneAndUpdate(
            { _id: req.params.userId },
            { $addToSet: { friends: req.params.friendId } },
            { runValidators: true, new: true }
        )
            .then((friend) =>
            !friend
            ? res.status(404).json({ message: 'No friends haha' })
            : res.json(friend)
    )
    .catch((err) => res.status(500).json(err));
},
    deleteFriend(req, res) {
        User.findOneAndUpdate(
            {_id: req.params.userId},
            { $pull: { friends: {friendId: req.params.friendId} } },
            { runValidators: true, new: true }
            )
            .then((friend) =>
            !friend
            ? res.status(404).json({message: 'Hmm cant delete'})
            : friend.deleteMany({_id: {$in: friend}}))
            .then(() => res.json({ message: 'Friend deleted!' }))
            .catch((err) => res.status(500).json(err));
    }

}